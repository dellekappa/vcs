global:
  # global.repository -- docker registry
  repository: ghcr.io/

replicaCount: 1

# restartOnDeployPolicy - One of
# - "" (kubernetes will handle if a restart is needed)
# - always (the pod will be restarted on any deployment)
# - oncmchange (when the config map changed or kubernetes decide to restart)
restartOnDeployPolicy: ""

image:
  repository: ""
  imageName: trustbloc/vc-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

route:
  enabled: false
  host: ""
  labels: {}
  annotations: {}

hostAliases: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

observability:
  # observability.host -- Observability Host
  host: 0.0.0.0
  # observability.port -- Observability Port
  port: 2112
  probes:
    liveness:
      enabled: true
      httpGet:
        path: /healthcheck
        port: obs
    readiness:
      enabled: true
      httpGet:
        path: /healthcheck
        port: obs

env: {}

envFromSecret: {}

envFromField:
  NODE_IP: status.hostIP

server:
  port: 8080
  externalUrl: ""

clients: []
authorities: []
verifiers: []

store:
  type: mongodb
  mongodb:
    url:
