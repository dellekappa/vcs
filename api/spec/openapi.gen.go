// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/trustbloc/vcs/pkg/restapi/v1/common"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"6b/qP375+OX/BwAA//8mpL49MzUBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	pathPrefix := path.Dir(pathToFile)

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(pathPrefix, "./common.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
