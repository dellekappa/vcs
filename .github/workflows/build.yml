#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

name: "vcs ci"

env:
  GO_VERSION: 1.18

on:
  push:
    branches: [ vcapi ]
  pull_request:
    branches: [ vcapi ]

jobs:
  SemanticPullRequest:
    name: Semantic Pull Request Check
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Checks:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run checks
        run: |
          echo $PATH
          go env
          echo ${{ github.workspace }}
          make checks

  UnitTest:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run unit tests
        run: make unit-test
      - name: Upload coverage to Codecov
        run: |
          bash <(curl https://codecov.io/bash)
        env:
          CODECOV_UPLOAD_TOKEN: ${{ secrets.CODECOV_UPLOAD_TOKEN }}

  BDDTestHolder:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run VC Holder BDD tests
        run: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          make bdd-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAGS: holder_rest

  BDDTestIssuer:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run VC Issuer BDD tests
        run: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          make bdd-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAGS: issuer_rest

  BDDTestVerifier:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run VC Verifier BDD tests
        run: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          make bdd-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAGS: verifier_rest

  BDDTestVCGeneric:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run VC generic BDD tests
        run: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          make bdd-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAGS: vc_rest

  BDDTestCHAPIWorkflow:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run CHAPI workflow BDD tests
        run: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          make bdd-test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAGS: w3c_workflow

  Publish:
    needs: [Checks, UnitTest, BDDTestHolder, BDDTestIssuer, BDDTestVerifier, BDDTestVCGeneric, BDDTestCHAPIWorkflow]
    if: github.event_name == 'push' && (github.repository == 'trustbloc/vcs' && github.ref == 'refs/heads/vcapi')
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - run: |
          function logout {
            docker logout
          }
          trap logout EXIT
          git lfs install
          git lfs pull
          source ci/version_var.sh
          echo $DOCKER_PASSWORD | docker login ghcr.io --username $DOCKER_USER --password-stdin
          make vc-rest-docker
          docker tag ghcr.io/trustbloc/vc-server:latest ${VC_SERVER_PKG}:${VC_SERVER_TAG}
          docker push ${VC_SERVER_PKG}:${VC_SERVER_TAG}
        env:
          DOCKER_USER: ${{ secrets.CR_USER }}
          DOCKER_PASSWORD: ${{ secrets.CR_PAT }}
          NPM_WALLET_PKG_TAG: $(NPM_WALLET_PKG_TAG)
          NPM_WALLET_PKG_NAME: $(NPM_WALLET_PKG_NAME)
          NPM_WALLET_PKG_REPO: $(NPM_WALLET_PKG_REPO)

  Interop:
    needs: [Checks, UnitTest, BDDTestHolder, BDDTestIssuer, BDDTestVerifier, BDDTestVCGeneric, BDDTestCHAPIWorkflow]
    if: github.event_name == 'push' && (github.repository == 'trustbloc/vcs' && github.ref == 'refs/heads/vcapi')
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run BDD interop tests
        run: |
          echo $PATH
          go env
          echo ${{ github.workspace }}
          make bdd-interop-test
